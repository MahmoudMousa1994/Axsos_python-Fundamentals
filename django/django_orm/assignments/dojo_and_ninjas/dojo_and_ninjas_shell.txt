>>> from dojo_ninja_app.models import *
>>> Dojo.objects.create(first_name = "Mahmoud" , last_name = "Shuman")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\query.py", line 661, in create
    obj = self.model(**kwargs)
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\base.py", line 569, in __init__
    raise TypeError(
    ...<2 lines>...
    )
TypeError: Dojo() got unexpected keyword arguments: 'first_name', 'last_name'
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah" , state = "palestine")
<Dojo: Dojo object (1)>
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah" , state = "palestine")
<Dojo: Dojo object (2)>
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah" , state = "palestine")
<Dojo: Dojo object (3)>
>>> to_delete = Dojo.objects.all()
>>> to_delete.delete()
(3, {'dojo_ninja_app.Dojo': 3})
>>> Dojo.objects.create(name = "mhd" , city = "Ram-Allah" , state = "palestine")
<Dojo: Dojo object (4)>
>>> Dojo.objects.create(name = "mhd" , city = "Ram-Allah" , state = "palestine")
<Dojo: Dojo object (5)>
>>> Dojo.objects.create(name = "mhd" , city = "Ram-Allah" , state = "palestine")
<Dojo: Dojo object (6)>
>>> Ninja.objects.create(first_name = "Qamar" , last_name = "Mahmoud", dojo = Dojo.objects.get(4))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\query.py", line 619, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
                                                        ~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\query.py", line 1493, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\query.py", line 1511, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\query.py", line 1518, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\sql\query.py", line 1646, in add_q
    clause, _ = self._add_q(q_object, can_reuse)
                ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\sql\query.py", line 1678, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ~~~~~~~~~~~~~~~~~^
        child,
        ^^^^^^
    ...<7 lines>...
        update_join_types=update_join_types,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\mahmo\Documents\python_stack\my_enviroments\py3Env\Lib\site-packages\django\db\models\sql\query.py", line 1523, in build_filter
    arg, value = filter_expr
    ^^^^^^^^^^
TypeError: cannot unpack non-iterable int object
>>> Ninja.objects.create(first_name = "Qamar" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 4))
<Ninja: Ninja object (1)>
>>> Ninja.objects.create(first_name = "Qamar2" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 4))
<Ninja: Ninja object (2)>
>>> Ninja.objects.create(first_name = "Qamar3" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 4))
<Ninja: Ninja object (3)>
>>> Ninja.objects.create(first_name = "Qamar1" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 5))
<Ninja: Ninja object (4)>
>>> Ninja.objects.create(first_name = "Qamar2" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 5))
<Ninja: Ninja object (5)>
>>> Ninja.objects.create(first_name = "Qamar3" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 5))
<Ninja: Ninja object (6)>
>>> Ninja.objects.create(first_name = "Qamar1" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 6))
<Ninja: Ninja object (7)>
>>> Ninja.objects.create(first_name = "Qamar2" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 6))
<Ninja: Ninja object (8)>
>>> Ninja.objects.create(first_name = "Qamar3" , last_name = "Mahmoud", dojo = Dojo.objects.get(id = 6))
<Ninja: Ninja object (9)>
>>> dojo4_ninjas = Ninja.objects.filter(dojo = Dojo.objects.get(id = 4))
>>> print(dojo4_ninjas)
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (2)>, <Ninja: Ninja object (3)>]>
>>> dojo5_ninjas = Ninja.objects.filter(dojo = Dojo.objects.get(id = 5))
>>> print(dojo5_ninjas)
<QuerySet [<Ninja: Ninja object (4)>, <Ninja: Ninja object (5)>, <Ninja: Ninja object (6)>]>
>>> dojo6_ninjas = Ninja.objects.filter(dojo = Dojo.objects.get(id = 6))
>>> print(dojo6_ninjas)
<QuerySet [<Ninja: Ninja object (7)>, <Ninja: Ninja object (8)>, <Ninja: Ninja object (9)>]>
>>> last_ninja = Ninja.objects.last()
>>> last_ninja_dojo = last_ninja.dojo
>>> print(last_ninja_dojo)
Dojo object (6)


(py3Env) C:\Users\mahmo\Documents\python_stack\django\django_orm\assignments\dojo_and_ninjas>py manage.py makemigrations
Migrations for 'dojo_ninja_app':
  dojo_ninja_app\migrations\0002_dojo_desc.py
    + Add field desc to dojo

(py3Env) C:\Users\mahmo\Documents\python_stack\django\django_orm\assignments\dojo_and_ninjas>py manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninja_app, sessions
Running migrations:
  Applying dojo_ninja_app.0002_dojo_desc... OK

(py3Env) C:\Users\mahmo\Documents\python_stack\django\django_orm\assignments\dojo_and_ninjas>py manage.py shell
8 objects imported automatically (use -v 2 for details).

Python 3.13.5 (tags/v3.13.5:6cb20a2, Jun 11 2025, 16:15:46) [MSC v.1943 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah , state = ="palestine" , desc = "FREE PALESTINE")
  File "<console>", line 1
    Dojo.objects.create(name = "Mahmoud" , city = "RamAllah , state = ="palestine" , desc = "FREE PALESTINE")
                                                                                                           ^
SyntaxError: unterminated string literal (detected at line 1)
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah , state = "palestine" , desc = "FREE PALESTINE")
  File "<console>", line 1
    Dojo.objects.create(name = "Mahmoud" , city = "RamAllah , state = "palestine" , desc = "FREE PALESTINE")
                                                                                                          ^
SyntaxError: unterminated string literal (detected at line 1)
>>> Dojo.objects.create(name = "Mahmoud" , city = "RamAllah" , state = "palestine" , desc = "FREE PALESTINE")
<Dojo: Dojo object (7)>
>>>
